# Problem from Business Calculus with Excel, Mike May, Anneke Bart
# WeBWorK problem written by Mike May, <mike.may@slu.edu>

## Author('Megan Nigg');
## DBsubject(Calculus - multivariable)
## DBchapter(Functions Graphs and Excel)
## DBsection(Finding Numerical Solutions with Goal Seek)
## Institution(Saint Louis University)
## Level(2)
## MO(1)
## TitleText1('Business Calculus with Excel')
## AuthorText1('May')
## Chapter('1')
## Section('6').
## Problem('9')
## KEYWORDS('calculus','linear','functions')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGcourse.pl",
"parserSolutionFor.pl",
);

TEXT(beginproblem());

Context("Vector");

$a = random(-0.9,-0.01,0.01);
$b = random(2,10,1);
$c = random(2,10,1);
$d = random(1,10,1);

$x1 = Compute("1");
$y1 = Compute("$x1/$d");

$x2 = Compute("2");
$y2 = Compute("$x2/$d");

#Newton's method for first intersection -- might need some work
# Move starting point close to first zero
$t0=-1;
do {$t0=$t0-.01} while 
($t0/$d<=exp($a*$t0)*($b*$t0+$c));
$t2=$t0;
for ($n=1; $n < 100; $n++)
{
$t=$t0-
(exp($a*$t0)*($b*$t0+$c)-$t0/$d)/
(exp($a*$t0)*($a*$b*$t0+$a*$c+$b)-1/$d);
$t0=$t;
}
$x1=Compute("$t0");
$y1=Compute("$x1/$d");

#Newton's method for second intersection -- might need some work
# Move starting point close to second zero
$t0=0;
do {$t0=$t0+.01} while 
($t0/$d<=exp($a*$t0)*($b*$t0+$c));
$t2=$t0;
for ($n=1; $n < 100; $n++)
{
$t=$t0-
(exp($a*$t0)*($b*$t0+$c)-$t0/$d)/
(exp($a*$t0)*($a*$b*$t0+$a*$c+$b)-1/$d);
$t0=$t;
}
$x2=Compute("$t0");
$y2=Compute("$x2/$d");




$answer = List(Point("($x1,$y1)"), Point("($x2,$y2)"));


Context()->texStrings;
BEGIN_TEXT


Use Goal Seek to find all intersection POINTS of \( f(t)=e^{$a*t}*($b t+$c) \) and \(g(t)=\frac{t}{$d}\) (separate by commas).
$BR
\{ans_rule(50)\}


END_TEXT
Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( $answer->cmp() );


Context()->texStrings;
BEGIN_SOLUTION
${PAR}SOLUTION:${PAR}

Use Goal seek to find where 

\(0=e^{$a t}($b t+$c) - \frac{t}{$d}\)
$BR
Starting with a positive number gives 
\(($x2, $y2)\)
$BR
Starting with an approximation of the negative root gives
\(($x1, $y1)\)
END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version.');

ENDDOCUMENT();     
